# Generated by Django 5.2 on 2025-04-28 09:17

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Main title text for the banner.', max_length=255)),
                ('subtitle', models.CharField(blank=True, help_text='Subtitle or supporting text.', max_length=255, null=True)),
                ('image', models.ImageField(help_text='Upload a banner image (JPG, PNG, WEBP).', upload_to='banners/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'webp'])])),
                ('enquiry_button_text', models.CharField(default='Enquire Now', help_text='Text shown on the enquiry button.', max_length=100)),
                ('enquiry_button_link', models.URLField(help_text='URL the enquiry button should link to.')),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to='blog_images/')),
                ('meta_title', models.CharField(blank=True, help_text='Meta title for SEO', max_length=255)),
                ('meta_description', models.TextField(blank=True, help_text='Meta description for SEO')),
                ('content', models.TextField(help_text='Page content')),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=250)),
                ('slug', models.SlugField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ('category_name',),
            },
        ),
        migrations.CreateModel(
            name='SocialMediaLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('facebook', 'Facebook'), ('twitter', 'Twitter'), ('instagram', 'Instagram'), ('linkedin', 'LinkedIn'), ('youtube', 'YouTube'), ('other', 'Other')], max_length=50)),
                ('url', models.URLField(blank=True, unique=True)),
                ('location', models.CharField(choices=[('header', 'Header'), ('footer', 'Footer'), ('both', 'Both')], default='both', max_length=10)),
                ('icon_class', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The display name of the menu item.', max_length=100)),
                ('url', models.CharField(blank=True, help_text='URL or path for the menu item.', max_length=255, unique=True)),
                ('position', models.CharField(choices=[('header', 'Header'), ('footer', 'Footer'), ('both', 'Both')], default='both', max_length=10)),
                ('order', models.PositiveIntegerField(default=0, help_text='Order of the menu item.')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the menu item is active.')),
                ('parent', models.ForeignKey(blank=True, help_text='Parent menu item, if any (for dropdown menus).', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='core.menuitem')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('image', models.ImageField(upload_to='products/')),
                ('description', models.TextField(blank=True, null=True)),
                ('meta_title', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('og_title', models.CharField(blank=True, max_length=255, null=True)),
                ('og_description', models.TextField(blank=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product', to='core.category')),
            ],
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='core.product')),
            ],
        ),
    ]
